// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

namespace Azure.DataApiBuilder.Config.ObjectModel;

/// <summary>
/// Describes the GraphQL settings specific to an entity.
/// </summary>
/// <remarks>This record is mutable.</remarks>
public record EntityGraphQLOptions
{
    /// <summary>
    /// The singular type name for the GraphQL object. If none is provided this will be generated by the Entity key.
    /// </summary>
    public string Singular { get; set; }

    /// <summary>
    /// The pluralisation of the entity. If none is provided a pluralisation of the Singular property is used.
    /// </summary>
    public string Plural { get; set; }

    /// <summary>
    /// Indicates if GraphQL is enabled for the entity.
    /// </summary>
    public bool Enabled { get; set; } = true;

    /// <summary>
    /// When the entity maps to a stored procedure, this represents the GraphQL operation to use, otherwise it will be null.
    /// </summary>
    public GraphQLOperation? Operation { get; set; }

    /// <summary>
    /// Initializes a new instance of the <see cref="EntityGraphQLOptions"/> class.
    /// </summary>
    public EntityGraphQLOptions()
    {
        Singular = default!;
        Plural = default!;
        Enabled = true;
        Operation = null;
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="EntityGraphQLOptions"/> class.
    /// </summary>
    /// <param name="Singular">The singular type name for the GraphQL object. If none is provided this will be generated by the Entity key.</param>
    /// <param name="Plural">The pluralisation of the entity. If none is provided a pluralisation of the Singular property is used.</param>
    /// <param name="Enabled">Indicates if GraphQL is enabled for the entity.</param>
    /// <param name="Operation">When the entity maps to a stored procedure, this represents the GraphQL operation to use, otherwise it will be null.</param>
    public EntityGraphQLOptions(string Singular, string Plural, bool Enabled = true, GraphQLOperation? Operation = null)
    {
        this.Singular = Singular;
        this.Plural = Plural;
        this.Enabled = Enabled;
        this.Operation = Operation;
    }
}
